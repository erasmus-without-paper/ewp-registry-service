<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xml="http://www.w3.org/XML/1998/namespace"
    xmlns:a="https://github.com/erasmus-without-paper/ewp-specs-types-address/tree/master"
    xmlns:c="https://github.com/erasmus-without-paper/ewp-specs-types-contact/tree/master"
    xmlns:p="https://github.com/erasmus-without-paper/ewp-specs-types-phonenumber/tree/master"
    xmlns:ewp="https://github.com/erasmus-without-paper/ewp-specs-architecture/blob/stable-v1/common-types.xsd"
    elementFormDefault="qualified"

    targetNamespace="https://github.com/erasmus-without-paper/ewp-specs-api-ounits/tree/master"
    xmlns="https://github.com/erasmus-without-paper/ewp-specs-api-ounits/tree/master"
>
    <!-- WRTODO: Replace all occurrences of 'master' (in all projects) with 'stable-v1' upon release. -->

    <xs:import
        schemaLocation="https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-architecture/stable-v1/common-types.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-architecture/blob/stable-v1/common-types.xsd"
    />

    <xs:import
        schemaLocation="../ewp-specs-types-address/schema.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-types-address/tree/master"
    /> <!-- WRTODO: absolute paths! -->

    <xs:import
        schemaLocation="../ewp-specs-types-contact/schema.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-types-contact/tree/master"
    /> <!-- WRTODO: absolute paths! -->

    <xs:import
        schemaLocation="../ewp-specs-types-phonenumber/schema.xsd"
        namespace="https://github.com/erasmus-without-paper/ewp-specs-types-phonenumber/tree/master"
    /> <!-- WRTODO: absolute paths! -->

    <xs:annotation>
        <xs:documentation>
            This schema is a part of the Erasmus Without Paper project. Before you start
            using it, make sure you have read the general rules described here:

            http://developers.erasmuswithoutpaper.eu/
        </xs:documentation>
    </xs:annotation>

    <xs:element name="ounits-response">
        <xs:annotation>
            <xs:documentation>
                This describes the format of the response returned by the EWP Organizational
                Units API.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="ounit" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            This represents a single organizational unit (this can be faculty, department,
                            division, or even the whole "root" institution). Servers will produce one such
                            element for each of the `ounit_id` values passed in the Organizational Units
                            API call.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="ounit-id" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        The ID of this organizational unit.

                                        These IDs MUST be unique within a single institution, and SHOULD NOT change in
                                        time. It is up to the server developers to come up with ID naming schema that
                                        guarantees that (UUIDs are often the safest choice). Note, that these IDs will
                                        be used in other APIs too.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="name" minOccurs="1" maxOccurs="unbounded" type="ewp:StringWithOptionalLang">
                                <xs:annotation>
                                    <xs:documentation>
                                        A collection of names, in different languages. Preferably, English should be
                                        one of them.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="parent-ounit-id" minOccurs="0" maxOccurs="1" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional parent unit ID.

                                        Many computer systems keep units in a tree-like hierarchy. The client is not
                                        required to display these hierarchy as such, but it can, if it wants to (and if
                                        this information is provided by the server implementers).

                                        When this feature is served, server implementers SHOULD make sure that all
                                        units form a valid tree, with a single root unit. The root unit should
                                        represent the HEI itself. All units in this tree (including the root unit)
                                        should be referenced in the Institutions API response (via the the ounit-id
                                        elements).
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="a:street-address" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        Street address of this organizational unit.

                                        This is the address which should work when, for example, the user pastes it
                                        into Google Maps. If this organizational unit is spread between multiple
                                        addresses, then this address should refer to a "primary" building. If it
                                        doesn't have a "primary" building, then the address should be skipped
                                        (multiple addresses can still be provided via separate "contact" elements).
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="a:mailing-address" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        The postal address of this organizational unit. It MAY be the same as
                                        street-address, but doesn't have to be (e.g. it can be a PO box).

                                        This is the primary address. Note, that more addresses may be provided by using
                                        the "contact" element, if necessary.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="website-url" minOccurs="0" maxOccurs="unbounded" type="ewp:HTTPWithOptionalLang">
                                <xs:annotation>
                                    <xs:documentation>
                                        A website URL of this organizational unit.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="c:contact" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
                                        A list of important contacts - phones, emails, addresses.

                                        In context of EWP, this will most often be mobility-related contacts, but it's
                                        not a rule.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

</xs:schema>
